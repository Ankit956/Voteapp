pipeline { 
    agent none
    stages{ 
        stage(build){ 
            when{ 
                changeset "**/vote/**" 
            }
            agent{
                docker{
                    image 'python:2.7.16-slim'
                    }
                    }

            steps{ 
                echo 'Compiling vote app.' 
                dir('vote'){ 


                   withEnv(['HOME=${env.WORKSPACE}']) {
                        sh "pip install -r requirements.txt --user"
                        }


                } 
            } 
        } 
        stage(test){ 
            when{ 
                changeset "**/vote/**" 
                } 
            agent {
                docker{
                    image 'python:2.7.16-slim'
                    }
                    }
            steps{ 
                echo 'Running Unit Tests on vote app.' 
                dir('vote'){ 
                    withEnv(['HOME=${env.WORKSPACE}']) {
                        sh "pip install -r requirements.txt --user"
                        sh 'nosetests -v'
                        }
                        
                } 
            } 
        } 

      stage('docker-package'){
          agent any
          when{
            changeset "**/vote/**"
            branch 'master'
          }
          steps{
            echo 'Packaging wvoteorker app with docker'
            script{
              docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                  // ./vote is the path to the Dockerfile that Jenkins will find from the Github repo
                  def voteImage = docker.build("okapetanios/vote:v${env.BUILD_ID}", "./vote")
                  voteImage.push()
                  voteImage.push("${env.BRANCH_NAME}")
                  voteImage.push("latest")
              }
            }
          }
      }

    } 
    post {
        always{
            echo 'Pipeline for vote is complete'
        }
    }

} 


