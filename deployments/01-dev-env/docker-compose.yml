services:
  vote:
    build: 
      context: ../../vote
    image: teamgrow/voting-vote:latest
    restart: on-failure
    command: ["flask", "run", "--host=0.0.0.0"]
    environment:
      FLASK_ENV: development
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      LOGLEVEL: DEBUG
    volumes:
      - ../../vote:/app
    ports:
      - "5000:5000"
    networks:
      - ingress-vote

  result:
    build: 
      context: ../../result
    image: teamgrow/voting-result:latest
    restart: on-failure
    command: ["nodemon", "server.js"]
    environment:
      NODE_ENV: development    
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ../../result:/app
    ports:
      - "5001:4000"
      - "5858:5858"
    networks:
      - ingress-result

  worker:
    build:
      context: ../../worker
    image: teamgrow/voting-worker:latest
    restart: on-failure
    read_only: true
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      LOG4J_LEVEL: DEBUG
    networks:
      - backend-redis
      - backend-db

  redis:
    image: redis:6.2.6
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]    
    networks:
      - ingress-vote
      - backend-redis

  db:
    image: postgres:14.1
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - ./postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql
    networks:
      - ingress-result
      - backend-db

volumes:
  db-data: {}

networks:
  ingress-result: {}
  ingress-vote: {}
  backend-redis: {}
  backend-db: {}
