# More examples of Codefresh YAML can be found at
# https://codefresh.io/docs/docs/yaml-examples/examples/

version: "1.0"
# Stages can help you organize your steps in stages
stages:
  - "clone"
  - "build"
  - "test"
  - "push"

steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_BRANCH}}"
    git: "github"
    stage: "clone"

  build:
    type: parallel
    stage: "build"
    steps:
      build-vote:
        title: "Building Docker image for vote service"
        type: "build"
        image_name: "lrochette/vote"
        working_directory: "${{clone}}/vote"
        tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
        dockerfile: "Dockerfile"
        disable_push: true
      build-result:
        title: "Building Docker image for result service"
        type: "build"
        image_name: "lrochette/result"
        working_directory: "${{clone}}/result"
        tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
        dockerfile: "Dockerfile"
        disable_push: true
      build-worker:
        title: "Building Docker image for worker service"
        type: "build"
        image_name: "lrochette/worker"
        working_directory: "${{clone}}/worker"
        tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
        dockerfile: "Dockerfile"
        disable_push: true
  test:
    title: "Running test"
    type: "freestyle"
    image: "curlimages/curl"
    fail_fast: false
    working_directory: "${{clone}}" # Running command where code cloned
    commands:
      - curl vote_service:80
      - exit 1
    stage: "test"
    services:
      composition:
        vote_service:
          image: "${{build-vote}}"
          ports:
            - 80
      readiness:
        image: "curlimages/curl"
        timeoutSeconds: 30
        commands:
          - curl vote_service:80
  export:
    title: "Export variable"
    type: "freestyle"
    image: "alpine:latest"
    stage: test
    commands:
      - echo ${{valueUpdated}}
      - cf_export valueUpdated=true
  check:
    title: "Check variable value"
    type: "freestyle"
    image: "alpine:latest"
    stage: test
    commands:
      - echo ${{valueUpdated}}

  # wait-approval:
  #   title: "Wait for approval"
  #   type: "pending-approval"
  #   stage: push
  #   timeout:
  #     duration: 1
  #     finalState: denied

  push:
    type: push
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    registry: docker-lr
    stage: "push"
    when:
        condition:
          any:
            testPass: steps.test.result === 'success'
    scale:
      push-vote:
        title: "Pushing vote image"
        candidate: ${{build-vote}}
        image_name: "lrochette/vote"
      push-worker:
        title: "Pushing worker image"
        candidate: ${{build-worker}}
        image_name: "lrochette/worker"
      push-result:
        title: "Pushing result image"
        candidate: ${{build-result}}
        image_name: "lrochette/result"
